package Manager;

import java.lang.reflect.Field;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.sql.DataSource;

import annotations.OrmColumn;
import annotations.OrmColumnId;
import annotations.OrmEntity;


public class OrmManager {
	DataSource dataSource = DBConnectionManager.getDataSource();

	public void OrmTableReflection(Object caller) {
		Class<?> clazz = caller.getClass();
		if (clazz.isAnnotationPresent(OrmEntity.class)) {
			OrmEntity ormEntity = clazz.getAnnotation(OrmEntity.class);
			createTable(ormEntity.table());
			System.out.println("Created table " + ormEntity.table());
			for (Field f : clazz.getDeclaredFields()) {
				if (f.isAnnotationPresent(OrmColumn.class)) {
					OrmColumnReflection(f, ormEntity.table());
				}
				if (f.isAnnotationPresent(OrmColumnId.class)) {
					OrmColumnIDReflection(ormEntity.table());
				}
			}
		}
	}

	public void OrmColumnIDReflection(String tableName) {
		try (Connection conn = dataSource.getConnection()) {
			String sql = """
					ALTER TABLE ?
					ADD COLUMN ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY;
					""";
			PreparedStatement st = conn.prepareStatement(sql);
			st.setString(1, tableName);
			st.executeUpdate();
		} catch (SQLException err) { System.err.println("Error: " + err.getMessage());}
	}

	public void OrmColumnReflection(Field f, String tableName) {
		OrmColumn ormColumn = f.getClass().getAnnotation(OrmColumn.class);
		if (setColumn(f, ormColumn, tableName))
			System.out.println("Added columns to " + tableName);
		else
			System.out.println("Failed adding columns to " + tableName);
	}

	boolean setColumn(Field f, OrmColumn ormColumn, String tableName) {
		String value;
		String valueType = f.getType().getSimpleName();
		String name = ormColumn.name();

		switch (valueType) {
			case "Int":
				value = "INT";
				break;
			case "String":
				value = "VARCHAR(" + ormColumn.length() + ")";
				break;
			case "boolean":
				value = "BOOLEAN";
				break;
			case "double":
				value = "DOUBLE";
				break;
			case "long":
				value = "BIGINT";
				break;
			default:
				throw new AssertionError("Wrong type: " + valueType);
		}
		String sql = """
				ALTER TABLE ?
				ADD COLUMN ? ?;
				""";
		try (Connection conn = dataSource.getConnection();){
			PreparedStatement st = conn.prepareStatement(sql);
			st.setString(1, tableName);
			st.setString(2, name);
			st.setString(3, value);
			return true;
		} catch (SQLException err) { System.err.println("Error: " + err.getMessage());}
		return false;
	};

	void createTable(String name) {
		try (Connection conn = dataSource.getConnection();) {
			String sql = "CREATE TABLE ?;";
			PreparedStatement statement = conn.prepareStatement(sql);
			
		} catch (SQLException err) { System.err.println(err.getMessage());}	
	}
	
}